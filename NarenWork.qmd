---
title: "NarenWork"
author: "Naren"
format: pdf
editor: visual
---

```{r}
library(tidyverse)
library(tidytext)
library(stringr)
library(pdftools)
library(syuzhet)
library(textdata)
library(readtext)
library(tm)
library(quanteda)
library(Rgraphviz)
library(topicmodels)
library(gridExtra)
```

```{r}
library(doParallel)
ncores <- detectCores()
clus <- makeCluster(ncores - 1)
registerDoParallel(clus)
```

```{r}
movies <- read_csv("movie_texts_tf_idf.csv")
```

## LDA

```{r}
mov <- movies %>% cast_dtm(title, word, n)
mov_LDA <- LDA(mov, k = 4, control = list(seed = 133))

topics <- tidy(mov_LDA, matrix = "beta")

topterms <- topics %>%
  group_by(topic) %>%
  top_n(10, beta) %>%
  ungroup() %>%
  arrange(topic, -beta)
topterms %>%
  mutate(term = reorder_within(term, beta, topic)) %>%
  ggplot(aes(term,
    beta,
    fill = factor(topic)
  )) +
  geom_col(show.legend = FALSE) +
  facet_wrap(~topic,
    scales =
      "free"
  ) +
  coord_flip() +
  scale_x_reordered() + theme_minimal() + ggtitle("10 most frequent terms by LDA topic group") + scale_fill_brewer(palette = "Pastel2")
```

```{r}
titleandyear <- movies %>% mutate(document = title) %>% select(c(document, decade))
docs <- tidy(mov_LDA, matrix = "gamma")
docs <- docs %>% inner_join(titleandyear)
docs$decade <- as.factor(docs$decade)
docs %>%
  mutate(document = reorder(document, gamma)) %>%
  ggplot(aes(factor(topic), gamma, fill = as.factor(topic))) +
  geom_boxplot() +
  facet_wrap(~decade) + xlab("Topic") + scale_fill_brewer(palette = "Pastel1") + theme_minimal() + labs(fill = "Topic colors") + ggtitle("Box plots of gamma value by topics")
```
## Classification model
.
```{r}
texts <- read_csv("cleaned_text_decade.csv") %>% select(title, decade, text)
corp <- Corpus(VectorSource(texts$text))
dtm <- DocumentTermMatrix(corp)
dtm <- removeSparseTerms(dtm, 0.96)
```

```{r}
data <- as.data.frame(as.matrix(dtm), stringsAsFactors=False)
data$decade <- texts$decade
data

print(table(data$decade))
prop.table(table(data$decade))
```
```{r}
library(randomForest)
library(caTools)
set.seed(133)

data$decade <- as.factor(data$decade)
split <- sample.split(data$decade, SplitRatio = 0.8)
train <- subset(data, split == TRUE)
test <- subset(data, split == FALSE)

print(dim(train))
print(dim(test))
```
```{r}
model <- randomForest(decade ~ ., train)
predictions <- predict(model, newdata = test)
trainp <- predict(model, newdata = train)
```

